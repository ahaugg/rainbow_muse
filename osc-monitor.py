import argparse
from pythonosc import dispatcher
from pythonosc import osc_server


"""
Read Muse data from an OSC stream as generated by e.g. Muse Monitor
for iOS and Android
"""


def eeg_handler(unused_addr, args, ch1, ch2, ch3, ch4, ch5):
    electrodes = [str(i) for i in [ch1, ch2, ch3, ch4, ch5]]
    print("EEG\t{}".format("\t".join(electrodes)))


def acc_handler(unused_addr, args, x, y, z):
    axes = [str(i) for i in [x, y, z]]
    print("ACC\t{}".format("\t".join(axes)))


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--ip",
                        default="127.0.0.1",
                        help="The ip to listen on")
    parser.add_argument("--port",
                        type=int,
                        default=5000,
                        help="The port to listen on")
    args = parser.parse_args()

    dispatcher = dispatcher.Dispatcher()
    # dispatcher.map("/debug", print)
    dispatcher.map("/muse/eeg", eeg_handler, "EEG")
    dispatcher.map("/muse/acc", acc_handler, "ACC")
    # dispatcher.map("/muse/eeg", print)

    server = osc_server.ThreadingOSCUDPServer(
        (args.ip, args.port), dispatcher)
    print("Serving on {}".format(server.server_address))
    server.serve_forever()
